# Generated by Django 5.2.6 on 2025-09-16 23:59

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('home', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='KeywordScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(help_text='키워드 카테고리 (address, transaction_type, building_type 등)', max_length=50)),
                ('keyword', models.CharField(help_text='키워드 값', max_length=200)),
                ('score', models.FloatField(default=0.0, help_text='키워드 스코어')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '키워드 스코어',
                'verbose_name_plural': '키워드 스코어',
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('property_id', models.AutoField(primary_key=True, serialize=False)),
                ('address', models.CharField(max_length=500)),
                ('owner_type', models.CharField(max_length=50)),
                ('transaction_type', models.CharField(max_length=50)),
                ('price', models.BigIntegerField()),
                ('building_type', models.CharField(max_length=50)),
                ('area_pyeong', models.FloatField()),
                ('floor_info', models.CharField(max_length=100)),
                ('direction', models.CharField(max_length=20)),
                ('tags', models.JSONField(default=list)),
                ('updated_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('crawled_date', models.DateTimeField(auto_now_add=True)),
                ('detail_url', models.URLField(blank=True, max_length=500, null=True)),
                ('image_urls', models.JSONField(default=list)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': '부동산 매물',
                'verbose_name_plural': '부동산 매물',
            },
        ),
        migrations.CreateModel(
            name='RecommendationCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cache_key', models.CharField(help_text='Redis 캐시 키', max_length=255)),
                ('properties_data', models.JSONField(help_text='추천 매물 데이터 (JSON)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '추천 캐시',
                'verbose_name_plural': '추천 캐시',
            },
        ),
        migrations.AlterModelOptions(
            name='searchhistory',
            options={'ordering': ['-search_date'], 'verbose_name': '검색 기록', 'verbose_name_plural': '검색 기록들'},
        ),
        migrations.RemoveIndex(
            model_name='searchhistory',
            name='home_search_created_efaa5a_idx',
        ),
        migrations.RemoveIndex(
            model_name='searchhistory',
            name='home_search_user_id_5a3f30_idx',
        ),
        migrations.RemoveField(
            model_name='searchhistory',
            name='created_at',
        ),
        migrations.RemoveField(
            model_name='searchhistory',
            name='id',
        ),
        migrations.RemoveField(
            model_name='searchhistory',
            name='query',
        ),
        migrations.RemoveField(
            model_name='searchhistory',
            name='results_count',
        ),
        migrations.AddField(
            model_name='searchhistory',
            name='parsed_keywords',
            field=models.JSONField(default=dict),
        ),
        migrations.AddField(
            model_name='searchhistory',
            name='query_text',
            field=models.TextField(default=''),
        ),
        migrations.AddField(
            model_name='searchhistory',
            name='redis_key',
            field=models.CharField(default='', max_length=255),
        ),
        migrations.AddField(
            model_name='searchhistory',
            name='result_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='searchhistory',
            name='search_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='searchhistory',
            name='search_id',
            field=models.AutoField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='searchhistory',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='searchhistory',
            index=models.Index(fields=['-search_date'], name='home_search_search__c7fbae_idx'),
        ),
        migrations.AddIndex(
            model_name='searchhistory',
            index=models.Index(fields=['user', '-search_date'], name='home_search_user_id_65fbe7_idx'),
        ),
        migrations.AddField(
            model_name='keywordscore',
            name='user',
            field=models.ForeignKey(blank=True, help_text='사용자 (None인 경우 전체 사용자 키워드)', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['address', 'transaction_type'], name='home_proper_address_4865eb_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['price'], name='home_proper_price_b21097_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['area_pyeong'], name='home_proper_area_py_3e64bf_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['crawled_date'], name='home_proper_crawled_55fb30_idx'),
        ),
        migrations.AddField(
            model_name='recommendationcache',
            name='user',
            field=models.ForeignKey(blank=True, help_text='사용자 (None인 경우 전체 사용자 추천)', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='keywordscore',
            index=models.Index(fields=['user', 'category'], name='home_keywor_user_id_61d2f9_idx'),
        ),
        migrations.AddIndex(
            model_name='keywordscore',
            index=models.Index(fields=['category', 'score'], name='home_keywor_categor_366e89_idx'),
        ),
        migrations.AddIndex(
            model_name='keywordscore',
            index=models.Index(fields=['updated_at'], name='home_keywor_updated_d58e82_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='keywordscore',
            unique_together={('user', 'category', 'keyword')},
        ),
        migrations.AddIndex(
            model_name='recommendationcache',
            index=models.Index(fields=['user'], name='home_recomm_user_id_50d46d_idx'),
        ),
        migrations.AddIndex(
            model_name='recommendationcache',
            index=models.Index(fields=['cache_key'], name='home_recomm_cache_k_af58b6_idx'),
        ),
        migrations.AddIndex(
            model_name='recommendationcache',
            index=models.Index(fields=['updated_at'], name='home_recomm_updated_ec1544_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='recommendationcache',
            unique_together={('user', 'cache_key')},
        ),
    ]
